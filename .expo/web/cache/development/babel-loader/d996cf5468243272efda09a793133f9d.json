{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Documents\\\\sukma\\\\Bootcamp-Dumbways\\\\RN-todo\\\\src\\\\screens\\\\AddTodoScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Container from \"../components/Container\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { API } from \"../services/API\";\nimport Button from \"react-native-web/dist/exports/Button\";\n\nvar AddTodoScreen = function AddTodoScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      newTodo = _useState2[0],\n      setNewTodo = _useState2[1];\n\n  var handleAdd = function handleAdd() {\n    var data, result;\n    return _regeneratorRuntime.async(function handleAdd$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            data = {\n              title: newTodo,\n              status: \"uncompleted\"\n            };\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(API.post(\"todo\", data));\n\n          case 4:\n            result = _context.sent;\n            setNewTodo(\"\");\n            navigation.goBack();\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 9]], Promise);\n  };\n\n  return React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.inputWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: styles.todoInput,\n    maxLength: 34,\n    placeholder: \"What do you think?\",\n    value: newTodo,\n    onChangeText: function onChangeText(val) {\n      setNewTodo(val);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: styles.plusButton,\n    onPress: handleAdd,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: \"Add todo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  content: {\n    width: \"100%\",\n    height: \"100%\",\n    padding: 20\n  },\n  inputWrapper: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  todoInput: {\n    borderWidth: 2,\n    borderColor: \"#0080FF\",\n    height: 50,\n    paddingHorizontal: 20,\n    marginBottom: 20,\n    borderRadius: 10,\n    fontSize: 18,\n    fontWeight: \"bold\",\n    color: \"#212121\",\n    width: \"100%\"\n  },\n  plusButton: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: 50\n  }\n});\nexport default AddTodoScreen;","map":{"version":3,"sources":["C:/Users/Lenovo/Documents/sukma/Bootcamp-Dumbways/RN-todo/src/screens/AddTodoScreen.js"],"names":["React","useState","Container","Ionicons","API","AddTodoScreen","navigation","newTodo","setNewTodo","handleAdd","data","title","status","post","result","goBack","console","log","styles","content","inputWrapper","todoInput","val","plusButton","StyleSheet","create","width","height","padding","flexDirection","justifyContent","borderWidth","borderColor","paddingHorizontal","marginBottom","borderRadius","fontSize","fontWeight","color","alignItems"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  TextInput,\n} from \"react-native\";\nimport Container from \"../components/Container\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { API } from \"../services/API\";\nimport { Button } from \"react-native\";\n\nconst AddTodoScreen = ({ navigation }) => {\n  const [newTodo, setNewTodo] = useState(\"\");\n\n  const handleAdd = async () => {\n    try {\n      const data = {\n        title: newTodo,\n        status: \"uncompleted\",\n      };\n      const result = await API.post(\"todo\", data);\n      setNewTodo(\"\");\n      navigation.goBack();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <Container>\n      <View style={styles.content}>\n        <View style={styles.inputWrapper}>\n          <TextInput\n            style={styles.todoInput}\n            maxLength={34}\n            placeholder=\"What do you think?\"\n            value={newTodo}\n            onChangeText={(val) => {\n              setNewTodo(val);\n            }}\n          />\n        </View>\n\n        <TouchableOpacity style={styles.plusButton} onPress={handleAdd}>\n          <Button\n            title=\"Add todo\"\n          />\n        </TouchableOpacity>\n      </View>\n    </Container>\n  );\n};\n\nconst styles = StyleSheet.create({\n  content: {\n    width: \"100%\",\n    height: \"100%\",\n    padding: 20,\n  },\n  inputWrapper: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n  todoInput: {\n    borderWidth: 2,\n    borderColor: \"#0080FF\",\n    height: 50,\n    paddingHorizontal: 20,\n    marginBottom: 20,\n    borderRadius: 10,\n    fontSize: 18,\n    fontWeight: \"bold\",\n    color: \"#212121\",\n    width: \"100%\",\n  },\n  plusButton: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: 50,\n  },\n});\n\nexport default AddTodoScreen;\n"]},"metadata":{},"sourceType":"module"}